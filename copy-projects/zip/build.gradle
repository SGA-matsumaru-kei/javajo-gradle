apply plugin: 'base'

ext {
    answer = 'answer'
}

task zipServer(type: Zip) {
    from '../images/server'
    baseName 'zip-server'
    destinationDir = file("${buildDir}/server-image")
}

// 演習2解答例
task zipComplex(type: Zip, group: answer) {
    description 'exercise2'
    from (fileTree('../images')) {
        include '**/*.png'
        exclude '**/*oo*.*'
        include '**/j*.*'
    }
    baseName = 'complex'
    destinationDir = file("${buildDir}/exercise2")
}

task zipIntoDist(type: Zip) {
    from fileTree('../images')
    into 'dist'
    baseName 'with-into'
}

task zipWithoutInto(type: Zip) {
    from fileTree('../images')
    baseName 'without-into'
}

task fiveLangs {
    def langs = [
            'Java', 'Groovy', 'Scala',
            'Kotlin', 'Clojure'
    ]
    def destDir = "${buildDir}/langs"
    outputs.dir(file(destDir))
    doLast {
        if (!file(destDir).exists()) {
            file(destDir).mkdirs()
        }
        langs.each {
            file("${destDir}/${it}.txt").write(it, 'UTF-8')
        }
    }
}

// 演習4解答例
task zipFiveLangs(type: Zip, group: answer) {
    from tasks.fiveLangs
    destinationDir = file("${buildDir}/zip-langs")
    baseName = 'langs'
}
